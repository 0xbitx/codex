__sys__ = ["Windows", "Darwin", "Linux"]
__name__ = "sendgrid"
__desc__ = "Use sendgrid"
__initiated__ = "required"

def send(_content, _module, _projName):
    import time, os, email, json, string, base64
    import sendgrid
    import getpass
    from sendgrid.helpers.mail import Email, Mail, Content
    from random import randint
    _content = str(_content)
    _module = str(_module)
    
    apiKey = "!@knicky.apiKey@!"
    _user = "!@knicky.user@!"

    sg = sendgrid.SendGridAPIClient(apikey = apiKey)
    fromEmail = Email("knicky@knicky-test.com")
    toEmail = Email(_user)
    subject = "%s 's test" % randint(0, 20000)
    content = Content("text/plain", "!knicky_msg!@msgstart@%s@msgend@" % {
        "_content": base64.b64encode(_content),
        "_id": "%s" % str(time.time()) + str(randint(0, 100)),
        "_date": str(time.time()),
        "_from": getpass.getuser(),
        "_byModule": _module,
        "_projName": _projName
    })
    mail = Mail(fromEmail, subject, toEmail, content)
    response = sg.client.mail.send.post(request_body=mail.get())

def receive(_range, _projName):
    import time, os, email, json, string, base64
    import poplib

    _server = "!@knicky.server@!"
    _user = "!@knicky.user@!"
    _password = "!@knicky.password@!"

    server = poplib.POP3_SSL(_server)
    server.user(_user)
    server.pass_(_password)
    resp, items, octets = server.list()
    _rangeL = [_range if len(items) > _range else len(items), len(items)]
    result = []
    lCounter = 0
    for s in range(_rangeL[1]):
        id, size = string.split(items[s])
        resp, text, octets = server.retr(id)
        content = ""
        for i in text:
            if "_from" in i:
                pass
            if "=" in i[-1:]:
                content += i.replace("=","")
            else:
                content += i
        if "!knicky_msg!" in content:
            resultTemp = json.loads(content.split("@msgstart@")[1]\
                .split("@msgend@")[0].replace("'", '"'))
            if resultTemp["_projName"] == _projName:
                result.append(resultTemp)
                lCounter += 1
        if lCounter == _range:
            break
    return result
